#include "signveri.h"

using namespace std;

ofstream myfile_sv;

int** matrix_sv;
int* hash_verify=0;
int result;


void generate_matrix_pk(int i)
{
	matrix_sv = new int *[n+1] ;//memory allocated for elements of rows.
	
	for( int j = 0 ; j < (n+1) ; j++ )
		matrix_sv[j] = new int[n+1];//memory allocated for  elements of each column.
	
	for(int j=0;j<n;j++)
	{
		for(int k=0;k<j;k++)
			matrix_sv[j][k]=0;

		for(int k=j;k<n;k++)
			matrix_sv[j][k]=matrix_MPK[i][j*n-(j*(j-1))/2+k-j];

		matrix_sv[j][n]=matrix_MPK[i][(n*(n+1))/2 + j];

	}
	
	for(int j=0;j<n;j++)
		matrix_sv[n][j]=0;

	matrix_sv[n][n]=matrix_MPK[i][((n+2)*(n+1))/2 -1];
}
void signverification()
{	
	int counter=0;
	hash_verify=new int[oilvariables];
	
	
	for(int i=0;i<oilvariables;i++)
	{	
		generate_matrix_pk(i);
		
		int* temp= new int [n+1];//memory allocated for temporary vector array;
		//memory allocated for hashvalue array;
		hash_verify[i]=0;

		for(int j=0;j<(n+1);j++)
		{	
			temp[j]=0;

			for(int k=j;k<n;k++)
				temp[j]=addTable(temp[j],mulTable(matrix_sv[j][k],message[k]));
				
			temp[j]=addTable(temp[j],matrix_sv[j][n]);

		}
		
		for(int l=0;l<n;l++)
				hash_verify[i]=addTable(hash_verify[i],mulTable(message[l],temp[l]));
		hash_verify[i]=addTable(hash_verify[i],temp[n]);

		if(hash_verify[i]==hashvalue[i])
			counter++;
	}
	
	if(counter==oilvariables)
		result=1;
	else
		result=0;
	
	
}

void print_signatureverification(int result)
{	
	myfile_sv.open("/home/ishtiaq/uov_output/Signature Verification.txt");
	myfile_sv<<"Signature Verification\n\n";
	myfile_sv<<"Hash values generated by verification process\n\n";
	myfile_sv<<"Hashvalue= (";
	for(int i=0;i<oilvariables;i++)
	{	
		myfile_sv<<hash_verify[i];
		if(i!=(oilvariables-1))
			myfile_sv<<", ";
	}
	myfile_sv<<")"<<endl;

	if(result==1)
	{
		myfile_sv<<"\n\nHash values generated by verification process are equal to original Hashvalues\nSo Signature Authenticated";
	}
	else
	{
		myfile_sv<<"\n\nHash values generated by verification process are not equal to original Hashvalues\nSo Signature Authentication Failed";
	}
	myfile_sv.close();
}
